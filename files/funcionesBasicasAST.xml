<function name="introduceSuma" type="int" line="3">
    <params/>
    <body>
        <declarations>
            <declaration type="int" name="r" line="4">
                <const value="4"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="a" line="5">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="b" line="6">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="c" line="7">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <return line="8">
            <const value="0"/>
        </return>
    </body>
</function>

<function name="decor3b" type="int" line="11">
    <params>
        <param type="int" name="b"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="a" line="12">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <consoleOut line="13">
            <variable name="a"/>
        </consoleOut>
        <consoleOut line="14">
            <variable name="b"/>
        </consoleOut>
        <return line="15">
            <binaryOperator type="arithmetic" operator="+">
                <variable name="a"/>
                <variable name="b"/>
            </binaryOperator>
        </return>
    </body>
</function>

<function name="potencia" type="int" line="18">
    <params>
        <param type="int" name="a"/>
        <param type="int" name="b"/>
    </params>
    <body>
        <if line="19">
            <binaryOperator type="comparison" operator="&gt;=">
                <variable name="b"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <declarations>
                        <declaration type="int" name="c" line="20">
                            <variable name="b"/>
                        </declaration>
                    </declarations>
                    <declarations>
                        <declaration type="int" name="r" line="21">
                            <const value="1"/>
                        </declaration>
                    </declarations>
                    <while line="22">
                        <binaryOperator type="comparison" operator="&gt;">
                            <variable name="c"/>
                            <const value="0"/>
                        </binaryOperator>
                        <body>
                            <assignmentOperator name="r" type="arithmetic" operator="*" line="23">
                                <variable name="a"/>
                            </assignmentOperator>
                            <unaryOperator name="c" operator="-" line="24"/>
                        </body>
                    </while>
                    <return line="26">
                        <variable name="r"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="28">
                        <signOperator type="-">
                            <const value="1"/>
                        </signOperator>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="multDiez" type="int" line="32">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="b" line="33"/>
        </declarations>
        <if line="34">
            <binaryOperator type="comparison" operator="&lt;">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <assignment name="b" line="35">
                        <signOperator type="-">
                            <variable name="a"/>
                        </signOperator>
                    </assignment>
                </body>
            </then>
            <else>
                <body>
                    <assignment name="b" line="37">
                        <variable name="a"/>
                    </assignment>
                </body>
            </else>
        </if>
        <declarations>
            <declaration type="int" name="c" line="39">
                <const value="10"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="r" line="40">
                <const value="0"/>
            </declaration>
        </declarations>
        <while line="41">
            <binaryOperator type="comparison" operator="&gt;">
                <variable name="c"/>
                <const value="0"/>
            </binaryOperator>
            <body>
                <assignmentOperator name="r" type="arithmetic" operator="+" line="42">
                    <variable name="a"/>
                </assignmentOperator>
                <unaryOperator name="c" operator="-" line="43"/>
            </body>
        </while>
        <return line="45">
            <variable name="r"/>
        </return>
    </body>
</function>

<function name="dimeSiPos" type="int" line="48">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="r" line="49"/>
        </declarations>
        <if line="50">
            <binaryOperator type="comparison" operator="&gt;">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <assignment name="r" line="51">
                        <const value="1"/>
                    </assignment>
                </body>
            </then>
            <else>
                <body>
                    <assignment name="r" line="53">
                        <const value="0"/>
                    </assignment>
                </body>
            </else>
        </if>
        <return line="55">
            <variable name="r"/>
        </return>
    </body>
</function>

<function name="factorial" type="int" line="59">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="60">
            <binaryOperator type="comparison" operator="&gt;=">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <declarations>
                        <declaration type="int" name="fact" line="61">
                            <const value="1"/>
                        </declaration>
                    </declarations>
                    <for line="62">
                        <declarations>
                            <declaration type="int" name="i" line="62">
                                <const value="2"/>
                            </declaration>
                        </declarations>
                        <binaryOperator type="comparison" operator="&lt;=">
                            <variable name="i"/>
                            <variable name="a"/>
                        </binaryOperator>
                        <unaryOperator name="i" operator="+" line="62"/>
                        <body>
                            <assignmentOperator name="fact" type="arithmetic" operator="*" line="63">
                                <variable name="i"/>
                            </assignmentOperator>
                        </body>
                    </for>
                    <return line="65">
                        <variable name="fact"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="67">
                        <signOperator type="-">
                            <const value="1"/>
                        </signOperator>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="fibonacci" type="int" line="71">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="72">
            <binaryOperator type="comparison" operator="&lt;">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="72">
                        <signOperator type="-">
                            <const value="1"/>
                        </signOperator>
                    </return>
                </body>
            </then>
        </if>
        <if line="73">
            <binaryOperator type="boolean" operator="||">
                <binaryOperator type="comparison" operator="==">
                    <variable name="a"/>
                    <const value="0"/>
                </binaryOperator>
                <binaryOperator type="comparison" operator="==">
                    <variable name="a"/>
                    <const value="1"/>
                </binaryOperator>
            </binaryOperator>
            <then>
                <body>
                    <return line="73">
                        <const value="1"/>
                    </return>
                </body>
            </then>
        </if>
        <declarations>
            <declaration type="int" name="fibo1" line="74">
                <const value="1"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="fibo2" line="75">
                <const value="1"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="auxf" line="76"/>
        </declarations>
        <for line="77">
            <declarations>
                <declaration type="int" name="i" line="77">
                    <const value="2"/>
                </declaration>
            </declarations>
            <binaryOperator type="comparison" operator="&lt;">
                <variable name="i"/>
                <variable name="a"/>
            </binaryOperator>
            <unaryOperator name="i" operator="+" line="77"/>
            <body>
                <assignment name="auxf" line="78">
                    <binaryOperator type="arithmetic" operator="+">
                        <variable name="fibo1"/>
                        <variable name="fibo2"/>
                    </binaryOperator>
                </assignment>
                <assignment name="fibo1" line="79">
                    <variable name="fibo2"/>
                </assignment>
                <assignment name="fibo2" line="80">
                    <variable name="auxf"/>
                </assignment>
            </body>
        </for>
        <return line="82">
            <binaryOperator type="arithmetic" operator="+">
                <variable name="fibo1"/>
                <variable name="fibo2"/>
            </binaryOperator>
        </return>
    </body>
</function>

<function name="introduceEntero" type="int" line="85">
    <params/>
    <body>
        <declarations>
            <declaration type="int" name="a" line="86">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <return line="87">
            <variable name="a"/>
        </return>
    </body>
</function>

<function name="reproduceEntero" type="int" line="90">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <consoleOut line="91">
            <variable name="a"/>
        </consoleOut>
        <return line="92">
            <const value="0"/>
        </return>
    </body>
</function>

<function name="llamadaFactorial" type="int" line="95">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <return line="96">
            <callFunction name="factorial" type="int">
                <arg>
                    <variable name="a"/>
                </arg>
            </callFunction>
        </return>
    </body>
</function>

<function name="ifLlamada" type="int" line="99">
    <params>
        <param type="int" name="a"/>
        <param type="int" name="b"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="r" line="100"/>
        </declarations>
        <if line="101">
            <binaryOperator type="comparison" operator="&lt;=">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <assignment name="r" line="102">
                        <callFunction name="factorial" type="int">
                            <arg>
                                <variable name="b"/>
                            </arg>
                        </callFunction>
                    </assignment>
                </body>
            </then>
            <else>
                <body>
                    <assignment name="r" line="104">
                        <callFunction name="potencia" type="int">
                            <arg>
                                <variable name="b"/>
                            </arg>
                            <arg>
                                <variable name="a"/>
                            </arg>
                        </callFunction>
                    </assignment>
                </body>
            </else>
        </if>
        <return line="106">
            <variable name="r"/>
        </return>
    </body>
</function>

<function name="pruebaIf01" type="int" line="109">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="110">
            <binaryOperator type="comparison" operator="==">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="110">
                        <const value="1"/>
                    </return>
                </body>
            </then>
        </if>
        <if line="111">
            <binaryOperator type="comparison" operator="&gt;">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="111">
                        <const value="3"/>
                    </return>
                </body>
            </then>
        </if>
        <if line="112">
            <binaryOperator type="comparison" operator="&lt;">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="112">
                        <signOperator type="-">
                            <const value="2"/>
                        </signOperator>
                    </return>
                </body>
            </then>
        </if>
    </body>
</function>

<function name="pruebaIf02" type="int" line="115">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="116">
            <binaryOperator type="comparison" operator="&gt;=">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="117">
                        <const value="2"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="119">
                        <signOperator type="-">
                            <const value="2"/>
                        </signOperator>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="pruebaIf03" type="int" line="123">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="124">
            <binaryOperator type="comparison" operator="&gt;=">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="125">
                        <const value="2"/>
                    </return>
                </body>
            </then>
        </if>
        <return line="127">
            <const value="3"/>
        </return>
    </body>
</function>

<function name="pruebaIf04" type="int" line="130">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="131">
            <binaryOperator type="comparison" operator="==">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="131">
                        <const value="1"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="132">
                        <signOperator type="-">
                            <const value="1"/>
                        </signOperator>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="pruebaIf05" type="int" line="135">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="136">
            <binaryOperator type="comparison" operator="==">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="136">
                        <const value="1"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="137">
                        <signOperator type="-">
                            <const value="1"/>
                        </signOperator>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="pruebaFor01" type="int" line="140">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="141">
            <binaryOperator type="comparison" operator="&gt;">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <declarations>
                        <declaration type="int" name="r" line="142">
                            <const value="0"/>
                        </declaration>
                    </declarations>
                    <for line="143">
                        <declarations>
                            <declaration type="int" name="i" line="143">
                                <const value="0"/>
                            </declaration>
                        </declarations>
                        <binaryOperator type="comparison" operator="&lt;">
                            <variable name="i"/>
                            <const value="10"/>
                        </binaryOperator>
                        <unaryOperator name="i" operator="+" line="143"/>
                        <body>
                            <assignmentOperator name="r" type="arithmetic" operator="+" line="144">
                                <variable name="a"/>
                            </assignmentOperator>
                        </body>
                    </for>
                    <return line="146">
                        <variable name="r"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="148">
                        <signOperator type="-">
                            <const value="1"/>
                        </signOperator>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="pruebaWhile01" type="int" line="152">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="r" line="153">
                <variable name="a"/>
            </declaration>
        </declarations>
        <while line="154">
            <binaryOperator type="comparison" operator="&gt;">
                <variable name="r"/>
                <const value="0"/>
            </binaryOperator>
            <body>
                <consoleOut line="155">
                    <variable name="r"/>
                </consoleOut>
                <unaryOperator name="r" operator="-" line="156"/>
            </body>
        </while>
        <return line="158">
            <const value="0"/>
        </return>
    </body>
</function>
