<function name="whileEstrictaCreciente" type="_Bool" line="3">
    <params/>
    <body>
        <declarations>
            <declaration type="int" name="a" line="4">
                <signOperator type="-">
                    <const value="1"/>
                </signOperator>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="b" line="5">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <while line="6">
            <binaryOperator type="boolean" operator="&amp;&amp;">
                <binaryOperator type="comparison" operator="&gt;">
                    <variable name="b"/>
                    <variable name="a"/>
                </binaryOperator>
                <binaryOperator type="comparison" operator="!=">
                    <variable name="b"/>
                    <signOperator type="-">
                        <const value="1"/>
                    </signOperator>
                </binaryOperator>
            </binaryOperator>
            <body>
                <consoleOut line="7">
                    <variable name="b"/>
                </consoleOut>
                <assignment name="a" line="8">
                    <variable name="b"/>
                </assignment>
                <assignment name="b" line="9">
                    <consoleIn type="int"/>
                </assignment>
            </body>
        </while>
        <return line="11">
            <binaryOperator type="comparison" operator="==">
                <variable name="b"/>
                <signOperator type="-">
                    <const value="1"/>
                </signOperator>
            </binaryOperator>
        </return>
    </body>
</function>

<function name="nfibonacci" type="int" line="14">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="15">
            <binaryOperator type="comparison" operator="&lt;">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="16">
                        <signOperator type="-">
                            <const value="1"/>
                        </signOperator>
                    </return>
                </body>
            </then>
        </if>
        <if line="17">
            <binaryOperator type="boolean" operator="||">
                <binaryOperator type="comparison" operator="==">
                    <variable name="a"/>
                    <const value="0"/>
                </binaryOperator>
                <binaryOperator type="comparison" operator="==">
                    <variable name="a"/>
                    <const value="1"/>
                </binaryOperator>
            </binaryOperator>
            <then>
                <body>
                    <return line="18">
                        <const value="1"/>
                    </return>
                </body>
            </then>
        </if>
        <declarations>
            <declaration type="int" name="fibo1" line="19">
                <const value="1"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="fibo2" line="20">
                <const value="1"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="auxf" line="21"/>
        </declarations>
        <for line="22">
            <declarations>
                <declaration type="int" name="i" line="22">
                    <const value="2"/>
                </declaration>
            </declarations>
            <binaryOperator type="comparison" operator="&lt;">
                <variable name="i"/>
                <variable name="a"/>
            </binaryOperator>
            <unaryOperator name="i" operator="+" line="22"/>
            <body>
                <assignment name="auxf" line="23">
                    <binaryOperator type="arithmetic" operator="+">
                        <variable name="fibo1"/>
                        <variable name="fibo2"/>
                    </binaryOperator>
                </assignment>
                <assignment name="fibo1" line="24">
                    <variable name="fibo2"/>
                </assignment>
                <assignment name="fibo2" line="25">
                    <variable name="auxf"/>
                </assignment>
            </body>
        </for>
        <return line="27">
            <binaryOperator type="arithmetic" operator="+">
                <variable name="fibo1"/>
                <variable name="fibo2"/>
            </binaryOperator>
        </return>
    </body>
</function>

<function name="inverso" type="int" line="30">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="aux" line="31">
                <variable name="a"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="aux2" line="32">
                <binaryOperator type="arithmetic" operator="%">
                    <variable name="aux"/>
                    <const value="10"/>
                </binaryOperator>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="re" line="33">
                <const value="0"/>
            </declaration>
        </declarations>
        <while line="34">
            <binaryOperator type="comparison" operator="&gt;">
                <variable name="aux"/>
                <const value="0"/>
            </binaryOperator>
            <body>
                <assignmentOperator name="re" type="arithmetic" operator="*" line="35">
                    <const value="10"/>
                </assignmentOperator>
                <assignmentOperator name="re" type="arithmetic" operator="+" line="36">
                    <variable name="aux2"/>
                </assignmentOperator>
                <consoleOut line="37">
                    <variable name="aux"/>
                </consoleOut>
                <assignment name="aux2" line="38">
                    <binaryOperator type="arithmetic" operator="/">
                        <variable name="aux"/>
                        <const value="10"/>
                    </binaryOperator>
                </assignment>
                <assignment name="aux" line="39">
                    <variable name="aux2"/>
                </assignment>
                <assignment name="aux2" line="40">
                    <binaryOperator type="arithmetic" operator="%">
                        <variable name="aux"/>
                        <const value="10"/>
                    </binaryOperator>
                </assignment>
            </body>
        </while>
        <return line="42">
            <variable name="re"/>
        </return>
    </body>
</function>

<function name="esCapicua" type="_Bool" line="45">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="aux" line="46">
                <callFunction name="inverso" type="int">
                    <arg>
                        <variable name="a"/>
                    </arg>
                </callFunction>
            </declaration>
        </declarations>
        <consoleOut line="47">
            <variable name="aux"/>
        </consoleOut>
        <if line="48">
            <binaryOperator type="comparison" operator="==">
                <variable name="aux"/>
                <variable name="a"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="49">
                        <const value="1"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="51">
                        <const value="0"/>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="deco2" type="int" line="58">
    <params>
        <param type="_Bool" name="a"/>
        <param type="_Bool" name="b"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="r" line="59">
                <const value="0"/>
            </declaration>
        </declarations>
        <if line="60">
            <variable name="a"/>
            <then>
                <body>
                    <assignmentOperator name="r" type="arithmetic" operator="+" line="61">
                        <const value="2"/>
                    </assignmentOperator>
                </body>
            </then>
        </if>
        <if line="62">
            <variable name="b"/>
            <then>
                <body>
                    <assignmentOperator name="r" type="arithmetic" operator="+" line="63">
                        <const value="1"/>
                    </assignmentOperator>
                </body>
            </then>
        </if>
        <return line="64">
            <variable name="r"/>
        </return>
    </body>
</function>

<function name="deco2b" type="int" line="67">
    <params>
        <param type="_Bool" name="a"/>
        <param type="_Bool" name="b"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="r" line="68">
                <const value="0"/>
            </declaration>
        </declarations>
        <if line="69">
            <variable name="a"/>
            <then>
                <body>
                    <if line="70">
                        <variable name="b"/>
                        <then>
                            <body>
                                <assignment name="r" line="71">
                                    <const value="3"/>
                                </assignment>
                            </body>
                        </then>
                        <else>
                            <body>
                                <assignment name="r" line="73">
                                    <const value="2"/>
                                </assignment>
                            </body>
                        </else>
                    </if>
                </body>
            </then>
            <else>
                <body>
                    <if line="76">
                        <variable name="b"/>
                        <then>
                            <body>
                                <assignment name="r" line="77">
                                    <const value="1"/>
                                </assignment>
                            </body>
                        </then>
                        <else>
                            <body>
                                <assignment name="r" line="79">
                                    <const value="0"/>
                                </assignment>
                            </body>
                        </else>
                    </if>
                </body>
            </else>
        </if>
        <return line="82">
            <variable name="r"/>
        </return>
    </body>
</function>

<function name="introduceSuma" type="int" line="85">
    <params/>
    <body>
        <declarations>
            <declaration type="int" name="a" line="86">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="b" line="87">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="c" line="88">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <return line="89">
            <binaryOperator type="arithmetic" operator="+">
                <binaryOperator type="arithmetic" operator="+">
                    <variable name="a"/>
                    <variable name="b"/>
                </binaryOperator>
                <variable name="c"/>
            </binaryOperator>
        </return>
    </body>
</function>

<function name="capicuaConvexa5" type="_Bool" line="97">
    <params/>
    <body>
        <declarations>
            <declaration type="int" name="a1" line="98">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="b1" line="99">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="c" line="100">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="b2" line="101">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="a2" line="102">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <return line="104">
            <binaryOperator type="boolean" operator="&amp;&amp;">
                <binaryOperator type="boolean" operator="&amp;&amp;">
                    <binaryOperator type="boolean" operator="&amp;&amp;">
                        <binaryOperator type="comparison" operator="==">
                            <variable name="a1"/>
                            <variable name="a2"/>
                        </binaryOperator>
                        <binaryOperator type="comparison" operator="==">
                            <variable name="b1"/>
                            <variable name="b2"/>
                        </binaryOperator>
                    </binaryOperator>
                    <binaryOperator type="comparison" operator="&lt;">
                        <variable name="a1"/>
                        <variable name="b1"/>
                    </binaryOperator>
                </binaryOperator>
                <binaryOperator type="comparison" operator="&lt;">
                    <variable name="b1"/>
                    <variable name="c"/>
                </binaryOperator>
            </binaryOperator>
        </return>
    </body>
</function>

<function name="modulo4" type="int" line="107">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="aux" line="108">
                <binaryOperator type="arithmetic" operator="%">
                    <variable name="a"/>
                    <const value="4"/>
                </binaryOperator>
            </declaration>
        </declarations>
        <if line="109">
            <binaryOperator type="comparison" operator="==">
                <variable name="aux"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="109">
                        <variable name="aux"/>
                    </return>
                </body>
            </then>
        </if>
        <if line="110">
            <binaryOperator type="comparison" operator="==">
                <variable name="aux"/>
                <const value="1"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="110">
                        <variable name="aux"/>
                    </return>
                </body>
            </then>
        </if>
        <if line="111">
            <binaryOperator type="comparison" operator="==">
                <variable name="aux"/>
                <const value="2"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="111">
                        <variable name="aux"/>
                    </return>
                </body>
            </then>
        </if>
        <if line="112">
            <binaryOperator type="comparison" operator="==">
                <variable name="aux"/>
                <const value="3"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="112">
                        <variable name="aux"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="113">
                        <signOperator type="-">
                            <const value="1"/>
                        </signOperator>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="esModulo5" type="_Bool" line="116">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <return line="117">
            <binaryOperator type="comparison" operator="==">
                <binaryOperator type="arithmetic" operator="%">
                    <variable name="a"/>
                    <const value="5"/>
                </binaryOperator>
                <const value="0"/>
            </binaryOperator>
        </return>
    </body>
</function>

<function name="multDiez" type="int" line="120">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="b" line="121"/>
        </declarations>
        <if line="122">
            <binaryOperator type="comparison" operator="&lt;">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <assignment name="b" line="123">
                        <signOperator type="-">
                            <variable name="a"/>
                        </signOperator>
                    </assignment>
                </body>
            </then>
            <else>
                <body>
                    <assignment name="b" line="125">
                        <variable name="a"/>
                    </assignment>
                </body>
            </else>
        </if>
        <declarations>
            <declaration type="int" name="c" line="127">
                <const value="10"/>
            </declaration>
        </declarations>
        <declarations>
            <declaration type="int" name="r" line="128">
                <const value="0"/>
            </declaration>
        </declarations>
        <while line="129">
            <binaryOperator type="comparison" operator="&gt;">
                <variable name="c"/>
                <const value="0"/>
            </binaryOperator>
            <body>
                <assignmentOperator name="r" type="arithmetic" operator="+" line="130">
                    <variable name="a"/>
                </assignmentOperator>
                <unaryOperator name="c" operator="-" line="131"/>
            </body>
        </while>
        <return line="133">
            <variable name="r"/>
        </return>
    </body>
</function>

<function name="dimeSiPos" type="int" line="136">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="r" line="137"/>
        </declarations>
        <if line="138">
            <binaryOperator type="comparison" operator="&gt;">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <assignment name="r" line="139">
                        <const value="1"/>
                    </assignment>
                </body>
            </then>
            <else>
                <body>
                    <assignment name="r" line="141">
                        <const value="0"/>
                    </assignment>
                </body>
            </else>
        </if>
        <return line="143">
            <variable name="r"/>
        </return>
    </body>
</function>

<function name="potencia" type="int" line="147">
    <params>
        <param type="int" name="a"/>
        <param type="int" name="b"/>
    </params>
    <body>
        <if line="148">
            <binaryOperator type="boolean" operator="&amp;&amp;">
                <binaryOperator type="comparison" operator="&gt;">
                    <variable name="a"/>
                    <const value="0"/>
                </binaryOperator>
                <binaryOperator type="comparison" operator="&gt;=">
                    <variable name="b"/>
                    <const value="0"/>
                </binaryOperator>
            </binaryOperator>
            <then>
                <body>
                    <declarations>
                        <declaration type="int" name="c" line="149">
                            <variable name="b"/>
                        </declaration>
                    </declarations>
                    <declarations>
                        <declaration type="int" name="r" line="150">
                            <const value="1"/>
                        </declaration>
                    </declarations>
                    <while line="151">
                        <binaryOperator type="comparison" operator="&gt;">
                            <variable name="c"/>
                            <const value="0"/>
                        </binaryOperator>
                        <body>
                            <assignmentOperator name="r" type="arithmetic" operator="+" line="152">
                                <variable name="a"/>
                            </assignmentOperator>
                            <unaryOperator name="c" operator="-" line="153"/>
                        </body>
                    </while>
                    <return line="155">
                        <variable name="r"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="157">
                        <signOperator type="-">
                            <const value="1"/>
                        </signOperator>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="factorial" type="int" line="161">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="162">
            <binaryOperator type="comparison" operator="&gt;=">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <declarations>
                        <declaration type="int" name="fact" line="163">
                            <const value="1"/>
                        </declaration>
                    </declarations>
                    <for line="164">
                        <declarations>
                            <declaration type="int" name="i" line="164">
                                <const value="2"/>
                            </declaration>
                        </declarations>
                        <binaryOperator type="comparison" operator="&lt;=">
                            <variable name="i"/>
                            <variable name="a"/>
                        </binaryOperator>
                        <unaryOperator name="i" operator="+" line="164"/>
                        <body>
                            <assignmentOperator name="fact" type="arithmetic" operator="*" line="165">
                                <variable name="i"/>
                            </assignmentOperator>
                        </body>
                    </for>
                    <return line="167">
                        <variable name="fact"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="169">
                        <signOperator type="-">
                            <const value="1"/>
                        </signOperator>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="introduceEntero" type="int" line="173">
    <params/>
    <body>
        <declarations>
            <declaration type="int" name="a" line="174">
                <consoleIn type="int"/>
            </declaration>
        </declarations>
        <return line="175">
            <variable name="a"/>
        </return>
    </body>
</function>

<function name="reproduceEntero" type="int" line="178">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <consoleOut line="179">
            <variable name="a"/>
        </consoleOut>
        <return line="180">
            <const value="0"/>
        </return>
    </body>
</function>

<function name="llamadaFactorial" type="int" line="183">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <return line="184">
            <callFunction name="factorial" type="int">
                <arg>
                    <variable name="a"/>
                </arg>
            </callFunction>
        </return>
    </body>
</function>

<function name="ifLlamada" type="int" line="187">
    <params>
        <param type="int" name="a"/>
        <param type="int" name="b"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="r" line="188"/>
        </declarations>
        <if line="189">
            <binaryOperator type="comparison" operator="&lt;=">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <assignment name="r" line="190">
                        <callFunction name="factorial" type="int">
                            <arg>
                                <variable name="b"/>
                            </arg>
                        </callFunction>
                    </assignment>
                </body>
            </then>
            <else>
                <body>
                    <assignment name="r" line="192">
                        <callFunction name="potencia" type="int">
                            <arg>
                                <variable name="b"/>
                            </arg>
                            <arg>
                                <variable name="a"/>
                            </arg>
                        </callFunction>
                    </assignment>
                </body>
            </else>
        </if>
        <return line="194">
            <variable name="r"/>
        </return>
    </body>
</function>

<function name="pruebaIf01" type="int" line="197">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="198">
            <binaryOperator type="comparison" operator="==">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="198">
                        <const value="1"/>
                    </return>
                </body>
            </then>
        </if>
        <if line="199">
            <binaryOperator type="comparison" operator="&gt;">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="199">
                        <const value="3"/>
                    </return>
                </body>
            </then>
        </if>
        <if line="200">
            <binaryOperator type="comparison" operator="&lt;">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="200">
                        <signOperator type="-">
                            <const value="2"/>
                        </signOperator>
                    </return>
                </body>
            </then>
        </if>
    </body>
</function>

<function name="pruebaIf02" type="int" line="203">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="204">
            <binaryOperator type="comparison" operator="&gt;=">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="205">
                        <const value="2"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="207">
                        <signOperator type="-">
                            <const value="2"/>
                        </signOperator>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="pruebaIf03" type="int" line="211">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="212">
            <binaryOperator type="comparison" operator="&gt;=">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="213">
                        <const value="2"/>
                    </return>
                </body>
            </then>
        </if>
        <return line="215">
            <const value="3"/>
        </return>
    </body>
</function>

<function name="pruebaIf04" type="int" line="218">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="219">
            <binaryOperator type="comparison" operator="==">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="219">
                        <const value="1"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="220">
                        <signOperator type="-">
                            <const value="1"/>
                        </signOperator>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="pruebaIf05" type="int" line="223">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="224">
            <binaryOperator type="comparison" operator="==">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <return line="224">
                        <const value="1"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="225">
                        <signOperator type="-">
                            <const value="1"/>
                        </signOperator>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="pruebaFor01" type="int" line="228">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <if line="229">
            <binaryOperator type="comparison" operator="&gt;">
                <variable name="a"/>
                <const value="0"/>
            </binaryOperator>
            <then>
                <body>
                    <declarations>
                        <declaration type="int" name="r" line="230">
                            <const value="0"/>
                        </declaration>
                    </declarations>
                    <for line="231">
                        <declarations>
                            <declaration type="int" name="i" line="231">
                                <const value="0"/>
                            </declaration>
                        </declarations>
                        <binaryOperator type="comparison" operator="&lt;">
                            <variable name="i"/>
                            <const value="10"/>
                        </binaryOperator>
                        <unaryOperator name="i" operator="+" line="231"/>
                        <body>
                            <assignmentOperator name="r" type="arithmetic" operator="+" line="232">
                                <variable name="a"/>
                            </assignmentOperator>
                        </body>
                    </for>
                    <return line="234">
                        <variable name="r"/>
                    </return>
                </body>
            </then>
            <else>
                <body>
                    <return line="236">
                        <signOperator type="-">
                            <const value="1"/>
                        </signOperator>
                    </return>
                </body>
            </else>
        </if>
    </body>
</function>

<function name="pruebaWhile01" type="int" line="240">
    <params>
        <param type="int" name="a"/>
    </params>
    <body>
        <declarations>
            <declaration type="int" name="r" line="241">
                <variable name="a"/>
            </declaration>
        </declarations>
        <while line="242">
            <binaryOperator type="comparison" operator="&gt;">
                <variable name="r"/>
                <const value="0"/>
            </binaryOperator>
            <body>
                <consoleOut line="243">
                    <variable name="r"/>
                </consoleOut>
                <unaryOperator name="r" operator="-" line="244"/>
            </body>
        </while>
        <return line="246">
            <const value="0"/>
        </return>
    </body>
</function>
